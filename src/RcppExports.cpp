// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/distops.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// DiagonalSubsetter
Rcpp::NumericVector DiagonalSubsetter(const Rcpp::NumericVector& x, const Rcpp::IntegerVector& indices);
RcppExport SEXP _distops_DiagonalSubsetter(SEXP xSEXP, SEXP indicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type indices(indicesSEXP);
    rcpp_result_gen = Rcpp::wrap(DiagonalSubsetter(x, indices));
    return rcpp_result_gen;
END_RCPP
}
// OffDiagonalSubsetter
Rcpp::NumericMatrix OffDiagonalSubsetter(const Rcpp::NumericVector& x, const Rcpp::IntegerVector& row_indices, const Rcpp::IntegerVector& col_indices);
RcppExport SEXP _distops_OffDiagonalSubsetter(SEXP xSEXP, SEXP row_indicesSEXP, SEXP col_indicesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type row_indices(row_indicesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type col_indices(col_indicesSEXP);
    rcpp_result_gen = Rcpp::wrap(OffDiagonalSubsetter(x, row_indices, col_indices));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_distops_DiagonalSubsetter", (DL_FUNC) &_distops_DiagonalSubsetter, 2},
    {"_distops_OffDiagonalSubsetter", (DL_FUNC) &_distops_OffDiagonalSubsetter, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_distops(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
