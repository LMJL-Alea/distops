[{"path":"https://lmjl-alea.github.io/distops/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 distops authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lmjl-alea.github.io/distops/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aymeric Stamm. Author, maintainer.","code":""},{"path":"https://lmjl-alea.github.io/distops/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stamm (2024). distops: Usual Operations Distance Matrices R. R package version 0.1.0, https://lmjl-alea.github.io/distops/, https://github.com/lmjl-alea/distops.","code":"@Manual{,   title = {distops: Usual Operations for Distance Matrices in R},   author = {Aymeric Stamm},   year = {2024},   note = {R package version 0.1.0, https://lmjl-alea.github.io/distops/},   url = {https://github.com/lmjl-alea/distops}, }"},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"distops","dir":"","previous_headings":"","what":"Usual Operations for Distance Matrices in R","title":"Usual Operations for Distance Matrices in R","text":"goal distops provide set functions compute distances observations sample perform operations distance matrices.","code":""},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Usual Operations for Distance Matrices in R","text":"can install development version distops GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"LMJL-Alea/distops\")"},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Usual Operations for Distance Matrices in R","text":"","code":"library(distops)"},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"package-developement","dir":"","previous_headings":"Features","what":"Package developement","title":"Usual Operations for Distance Matrices in R","text":"provide two functions package developers help defining efficient implementation dist functions custom distances. Namely: use_distops() setups package use distops computing distances. particular, creates src/ directory Makevars file Makevars.win file. also creates R/distops-package.R file appropriate roxygen2 tags NAMESPACE file modified add importFrom() directives Rcpp RcppParallel packages useDynLib() directive packages compiled code. finally modifies DESCRIPTION file add Rcpp, RcppParallel distops Imports LinkingTo fields GNU make SystemRequirements field. use_distance() creates R C++ files easy implementation custom distances.","code":""},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"subset-operator","dir":"","previous_headings":"Features","what":"Subset operator","title":"Usual Operations for Distance Matrices in R","text":"Let us compute Euclidean distance matrix iris dataset: can subset matrix using [ operator. can either provide indices rows columns case return another object class dist: can provide different indices rows columns case returns dense matrix: subsetting operation fully parallelized using RcppParallel package. also memory efficient copy original distance matrix.","code":"D <- dist(iris[, 1:4], method = \"euclidean\") D[1:3, 1:3] #>           1         2 #> 2 0.5385165           #> 3 0.5099020 0.3000000 D[2:3, 7:12] #>           7         8         9        10        11        12 #> 2 0.5099020 0.4242641 0.5099020 0.1732051 0.8660254 0.4582576 #> 3 0.2645751 0.4123106 0.4358899 0.3162278 0.8831761 0.3741657"},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"medoid-computation","dir":"","previous_headings":"Features","what":"Medoid computation","title":"Usual Operations for Distance Matrices in R","text":"medoid sample observation minimizes sum distances observations. find_medoids() function computes medoid sample given distance. takes advantage RcppParallel package compute medoid parallel. memberships argument provided, returns medoid cluster.","code":"find_medoids(D) #> [1] 62 find_medoids(D, memberships = as.factor(rep(1:3, each = 50L))) #>   1   2   3  #>   8  97 113"},{"path":"https://lmjl-alea.github.io/distops/index.html","id":"future-work","dir":"","previous_headings":"","what":"Future work","title":"Usual Operations for Distance Matrices in R","text":"Pass list instead matrix general? Use Arrow parquet format store distance matrix multiple files sample size exceeds 10,000 something like . Use Arrow connection read large data. Add Progress bar.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/distops-package.html","id":null,"dir":"Reference","previous_headings":"","what":"distops: Usual Operations for Distance Matrices in R — distops-package","title":"distops: Usual Operations for Distance Matrices in R — distops-package","text":"provides subset operator dist objects function compute medoid(s) fully parallelized leveraging 'RcppParallel' package. also provides functions package developers easily implement parallelized dist() function using custom 'C++'-based distance function.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/distops/reference/distops-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"distops: Usual Operations for Distance Matrices in R — distops-package","text":"Maintainer: Aymeric Stamm aymeric.stamm@cnrs.fr (ORCID)","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/find_medoids.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the medoids from a distance matrix — find_medoids","title":"Finds the medoids from a distance matrix — find_medoids","text":"function finds medoids distance matrix. medoid object minimizes sum distances objects. function takes advantage RcppParallel package compute medoids parallel.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/find_medoids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the medoids from a distance matrix — find_medoids","text":"","code":"find_medoids(D, memberships = NULL)"},{"path":"https://lmjl-alea.github.io/distops/reference/find_medoids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the medoids from a distance matrix — find_medoids","text":"D object class stats::dist. memberships factor specifying cluster memberships objects.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/find_medoids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the medoids from a distance matrix — find_medoids","text":"named integer vector specifying indices medoids.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/find_medoids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds the medoids from a distance matrix — find_medoids","text":"","code":"D <- stats::dist(iris[, 1:4]) find_medoids(D) #> [1] 62 memberships <- as.factor(rep(1:3, each = 50L)) find_medoids(D, memberships) #>   1   2   3  #>   8  97 113"},{"path":"https://lmjl-alea.github.io/distops/reference/sub-.dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance Matrix Subset Operator — [.dist","title":"Distance Matrix Subset Operator — [.dist","text":"Subset operator distance matrix stored object class stats::dist.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/sub-.dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance Matrix Subset Operator — [.dist","text":"","code":"# S3 method for dist [(x, i, j, drop = TRUE, ...)"},{"path":"https://lmjl-alea.github.io/distops/reference/sub-.dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance Matrix Subset Operator — [.dist","text":"x object class stats::dist. integer vector row indices. Values must either positive case indicate rows select, negative case indicate rows omit. j integer vector column indices. Values must either positive case indicate columns select, negative case indicate columns omit. drop logical value indicating whether result coerced vector matrix possible. ... Additional arguments passed [.dist.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/sub-.dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance Matrix Subset Operator — [.dist","text":"numeric matrix storing pairwise distances requested observations.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/sub-.dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance Matrix Subset Operator — [.dist","text":"","code":"D <- stats::dist(iris[, 1:4]) D[2:3, 7:12] #>           7         8         9        10        11        12 #> 2 0.5099020 0.4242641 0.5099020 0.1732051 0.8660254 0.4582576 #> 3 0.2645751 0.4123106 0.4358899 0.3162278 0.8831761 0.3741657"},{"path":"https://lmjl-alea.github.io/distops/reference/use_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a distance function to the package — use_distance","title":"Adds a distance function to the package — use_distance","text":"function adds distance function package. first creates R/{distance_name}Distance.R file R wrapper function distance function. creates src/{distance_name}Distance.cpp file C++ implementation distance function. finally opens latter file default editor. user able implement desired distance function way compatible RcppParallel workflow.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/use_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a distance function to the package — use_distance","text":"","code":"use_distance(distance_name)"},{"path":"https://lmjl-alea.github.io/distops/reference/use_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a distance function to the package — use_distance","text":"distance_name character string specifying name distance user aims implementing.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/use_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds a distance function to the package — use_distance","text":"Nothing.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/use_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adds a distance function to the package — use_distance","text":"","code":"# \\donttest{ use_distance(\"euclidean\") #> NULL # }"},{"path":"https://lmjl-alea.github.io/distops/reference/use_distops.html","id":null,"dir":"Reference","previous_headings":"","what":"Setups package to use the distops package — use_distops","title":"Setups package to use the distops package — use_distops","text":"function setups package use distops package. first creates DESCRIPTION file adding Rcpp RcppParallel packages Imports: LinkingTo: fields distops package LinkingTo: field. also adds SystemRequirements: GNU make field. creates NAMESPACE file adding importFrom() directives Rcpp RcppParallel packages useDynLib() directive packages compiled code. finally creates src/Makevars src/Makevars.win files appropriate compilation flags.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/use_distops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setups package to use the distops package — use_distops","text":"","code":"use_distops()"},{"path":"https://lmjl-alea.github.io/distops/reference/use_distops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setups package to use the distops package — use_distops","text":"Nothing.","code":""},{"path":"https://lmjl-alea.github.io/distops/reference/use_distops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setups package to use the distops package — use_distops","text":"","code":"# \\donttest{ use_distops() #> NULL # }"},{"path":[]},{"path":"https://lmjl-alea.github.io/distops/news/index.html","id":"features-0-1-0","dir":"Changelog","previous_headings":"","what":"Features","title":"distops 0.1.0","text":"Provides functions use_distops() use_distance() package developers define TBB-parallelized functions compute pairwise distance matrices using custom C++-implemented distance function. Provides subset operator [.dist subset distance matrix. returned object either class dist row column indices identical class matrix row column indices different. Provides function find_medoids(D, memberships = NULL) find medoid(s) distance matrix. memberships provided, one medoid per cluster returned. Otherwise, single overall medoid returned.","code":""}]
